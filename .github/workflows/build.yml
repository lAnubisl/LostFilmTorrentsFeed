name: Build
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x' # set this to the dotnet version to use

jobs:
  build-and-deploy:
    name: 'Build and Deploy'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup DotNet ${{ env.DOTNET_VERSION }} Environment'
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Install dotnet-sonarscanner'
        run: |
          dotnet tool install --global dotnet-sonarscanner
 
      - name: 'Install dotnet-coverage'
        run: |
          dotnet tool install --global dotnet-coverage

      - name: 'Install DeepSource CLI'
        run: |
          curl https://deepsource.io/cli | sh
      
      - name: 'SonarCloud Begin'
        run: |
          dotnet sonarscanner begin \
            /k:"lAnubisl_LostFilmTorrentsFeed" \
            /o:"lanubisl" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml

      - name: 'CodeQL Begin'
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: 'Build Solution'
        run: |
          dotnet build --configuration Release

      - name: 'Run Unit Tests'
        run: |
          dotnet-coverage collect 'dotnet test --configuration Release --no-build --no-restore' -f xml -o 'coverage.xml'

      - name: 'CodeQL End'
        uses: github/codeql-action/analyze@v2

      - name: 'SonarCloud End'
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}

      - name: 'Publish'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Deploy'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'funclostfilmfeed'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_265B0E3F9D5840DFB613B7617FDFD373 }}