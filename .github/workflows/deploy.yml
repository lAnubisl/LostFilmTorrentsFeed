name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to'
        required: true
        type: choice
        options:
        - dev
        - prod

run-name: Deploy to ${{ inputs.environment }}

permissions:
  id-token: write
  contents: read
  checks: write # This is required by dorny/test-reporter https://github.com/dorny/test-reporter/issues/149

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    outputs:
      functionAppName: ${{ steps.pulumi.outputs.FunctionName }}
      websiteStorageAccountName: ${{ steps.pulumi.outputs.WebsiteStorageAccountName }}
      apiDomain: ${{ steps.pulumi.outputs.ApiDomain }}
      dataDomain: ${{ steps.pulumi.outputs.DataDomain }}
    defaults:
      run:
        working-directory: ./LostFilmMonitoring.AzureInfrastructure

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - uses: pulumi/actions@v6
        name: Pulumi Up
        id: pulumi
        with:
          command: up
          stack-name: ${{inputs.environment}}
          work-dir: LostFilmMonitoring.AzureInfrastructure
          cloud-url: ${{ vars.PULUMI_BACKEND_URL }}
          refresh: true
          secrets-provider: passphrase
        env:
          ARM_USE_OIDC: "true"
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          PULUMI_CONFIG_PASSPHRASE: "${{ secrets.PULUMI_CONFIG_PASSPHRASE }}"

  backend:
    runs-on: ubuntu-latest
    needs: infrastructure
    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Dotnet Build
        run: dotnet build --configuration Release

      - name: Unit Tests
        run: dotnet test --configuration Release --logger "trx;LogFileName=test-results.trx" || true

      - name: Unit Tests Report
        uses: dorny/test-reporter@v2
        with:
          name: DotNET Tests
          path: '**/test-results.trx'
          reporter: dotnet-trx
          fail-on-error: true

      - name: Publish Artifact
        run: |
          dotnet build LostFilmMonitoring.AzureFunction/LostFilmMonitoring.AzureFunction.csproj --configuration Release --output publish

      - uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Azure Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.infrastructure.outputs.functionAppName }}
          package: './publish'

  frontend:
    runs-on: ubuntu-latest
    needs: infrastructure
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Update Configuration
        working-directory: ./LostFilmMonitoring.Web
        run: node update-config.js
        env:
          BASE_API_URI: https://${{ needs.infrastructure.outputs.apiDomain }}/api/
          BASE_DATA_URI: https://${{ needs.infrastructure.outputs.dataDomain }}/models/
          IMAGES_BASE_URI: https://${{ needs.infrastructure.outputs.dataDomain }}/images/
          BASE_RSS_URI: https://${{ needs.infrastructure.outputs.dataDomain }}/rssfeeds/

      - uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Upload to blob storage
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ needs.infrastructure.outputs.websiteStorageAccountName }} --auth-mode login -d '$web' -s ./LostFilmMonitoring.Web --overwrite true

      
